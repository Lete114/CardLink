{"version":3,"file":"cardlink.js","sources":["../src/utils.js","../src/inject.js","../src/renderer.js","../src/main.js","../src/parse.js"],"sourcesContent":["/**\r\n * Creating element\r\n * @param {String} name Element Name\r\n * @param {String} className Element className\r\n * @returns {HTMLElement}\r\n */\r\nexport function createElement(name, className) {\r\n  const dom = document.createElement(name)\r\n  if (className) dom.className = className\r\n  return dom\r\n}\r\n\r\n/**\r\n * Creates svg element\r\n * @param {String} name Element Name\r\n * @returns {SVGElementTagNameMap}\r\n */\r\nexport function createSVG(name) {\r\n  return document.createElementNS('http://www.w3.org/2000/svg', name)\r\n}\r\n\r\n/**\r\n * Set element attribute\r\n * @param {HTMLElement} el Element\r\n * @param {Object} obj Objects of key-value pairs\r\n */\r\nexport function setAttribute(el, obj) {\r\n  for (const key in obj) el.setAttribute(key, obj[key])\r\n}\r\n\r\n/**\r\n * Append child node or element\r\n * @param {HTMLElement} el Element\r\n * @param {Node} child The node to append to the given parent node (commonly an element).\r\n */\r\nexport function appendChild(el, child) {\r\n  el.appendChild(child)\r\n}\r\n\r\n/**\r\n * Remove '/' and '/index.html'\r\n * @param {String} params\r\n * @returns { String }\r\n */\r\nexport function indexHandler(params) {\r\n  let path = params.replace(/(\\/index\\.html|\\/)*$/gi, '')\r\n  if (path.length === 0) path += '/'\r\n  return path\r\n}\r\n\r\n/**\r\n * @param {Object} param\r\n * @param {Array} requiredParams\r\n */\r\nexport function verifyParams(param, requiredParams) {\r\n  for (const index in requiredParams) {\r\n    const requiredParam = requiredParams[index]\r\n    if (!param[requiredParam]) {\r\n      throw new Error(`Parameter '${requiredParam}' not legal`)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Determine if it is a ['https://', 'http://', '//'] protocol\r\n * @param {String} url Website url\r\n * @returns {Boolean}\r\n */\r\nexport function isHttp(url) {\r\n  return /^(https?:)?\\/\\//g.test(url)\r\n}\r\n","import { createElement } from './utils'\r\nimport styles from './main.css'\r\n\r\nconst style = createElement('style')\r\nstyle.textContent = styles\r\ndocument.head.appendChild(style)\r\n","import { createSVG, setAttribute, appendChild, createElement } from './utils'\r\n\r\n/**\r\n * Create card link icon\r\n * @param {String} icon Icon URL\r\n * @returns {SVGElementTagNameMap}\r\n */\r\nfunction createIcon(icon) {\r\n  const svg = createSVG('svg')\r\n  svg.classList.add('card-link-icon')\r\n  svg.style.background = '#ebebeb'\r\n  setAttribute(svg, { fill: '#d4d4d4', viewBox: '0 0 1024 1024' })\r\n  const path = createSVG('path')\r\n\r\n  setAttribute(path, {\r\n    // eslint-disable-next-line max-len\r\n    d: 'M177.152 384a357.546667 357.546667 0 0 0-23.552 128 357.546667 357.546667 0 0 0 23.552 128h140.245333a791.808 791.808 0 0 1-10.197333-128c0-44.714667 3.584-87.722667 10.197333-128H177.152z m24.405333-51.2h126.250667c15.786667-65.024 40.021333-120.405333 69.76-160.554667A359.466667 359.466667 0 0 0 201.557333 332.8zM844.8 378.709333V384h-138.197333c6.613333 40.277333 10.197333 83.285333 10.197333 128s-3.584 87.722667-10.197333 128H844.8v5.290667c16.512-41.216 25.6-86.186667 25.6-133.290667a357.418667 357.418667 0 0 0-25.6-133.290667zM822.442667 332.8a359.466667 359.466667 0 0 0-196.010667-160.554667c29.738667 40.149333 53.930667 95.573333 69.76 160.554667h126.293333zM369.365333 384a736.042667 736.042667 0 0 0-10.965333 128c0 45.354667 3.968 88.448 10.965333 128h285.269334c6.997333-39.552 10.965333-82.645333 10.965333-128s-3.968-88.448-10.965333-128H369.365333z m11.264-51.2h262.741334c-28.586667-108.032-80.725333-179.2-131.370667-179.2-50.645333 0-102.741333 71.168-131.370667 179.2z m-179.072 358.4a359.466667 359.466667 0 0 0 196.010667 160.554667c-29.738667-40.149333-53.930667-95.573333-69.76-160.554667h-126.293333z m620.885334 0h-126.250667c-15.786667 65.024-40.021333 120.405333-69.76 160.554667a359.466667 359.466667 0 0 0 196.010667-160.554667z m-441.813334 0c28.586667 108.032 80.725333 179.2 131.370667 179.2 50.645333 0 102.741333-71.168 131.370667-179.2H380.629333zM512 921.6a409.6 409.6 0 1 1 0-819.2 409.6 409.6 0 0 1 0 819.2z'\r\n  })\r\n  appendChild(svg, path)\r\n\r\n  if (icon) {\r\n    const img = createElement('img', 'card-link-icon')\r\n    img.src = icon\r\n\r\n    // If icon is valid, replace `svgIcon` with `imgIcon`\r\n    img.onload = function () {\r\n      img.onload = null\r\n      svg.parentNode.replaceChild(img, svg)\r\n    }\r\n  }\r\n  return svg\r\n}\r\n\r\n/**\r\n * Creating a Document Object Model\r\n * @param {String} title Website title\r\n * @param {String} link Website address\r\n * @param {String} icon Website icon\r\n * @returns {HTMLElement}\r\n */\r\n// eslint-disable-next-line max-statements\r\nfunction createDOM(title, link, icon) {\r\n  const wrapDOM = createElement('div', 'card-link')\r\n  const iconDOM = createIcon(icon)\r\n\r\n  const aDOM = createElement('a', 'card-link-content')\r\n  aDOM.href = link\r\n\r\n  const textDOM = createElement('div', 'card-link-text')\r\n\r\n  const titleDOM = createElement('span', 'card-link-title')\r\n  titleDOM.textContent = title\r\n\r\n  const linkDOM = createElement('span', 'card-link-url')\r\n\r\n  const linkSvgDOM = createSVG('svg')\r\n  setAttribute(linkSvgDOM, {\r\n    width: 14,\r\n    height: 14,\r\n    viewBox: '0 0 24 24',\r\n    fill: 'currentColor'\r\n  })\r\n\r\n  const linkPathDOM = createSVG('path')\r\n  setAttribute(linkPathDOM, {\r\n    // eslint-disable-next-line max-len\r\n    d: 'M5.327 18.883a3.005 3.005 0 010-4.25l2.608-2.607a.75.75 0 10-1.06-1.06l-2.608 2.607a4.505 4.505 0 006.37 6.37l2.608-2.607a.75.75 0 00-1.06-1.06l-2.608 2.607a3.005 3.005 0 01-4.25 0zm5.428-11.799a.75.75 0 001.06 1.06L14.48 5.48a3.005 3.005 0 014.25 4.25l-2.665 2.665a.75.75 0 001.061 1.06l2.665-2.664a4.505 4.505 0 00-6.371-6.372l-2.665 2.665zm5.323 2.117a.75.75 0 10-1.06-1.06l-7.072 7.07a.75.75 0 001.061 1.06l7.071-7.07z'\r\n  })\r\n\r\n  appendChild(linkSvgDOM, linkPathDOM)\r\n  appendChild(linkDOM, linkSvgDOM)\r\n  appendChild(linkDOM, document.createTextNode(link))\r\n\r\n  appendChild(textDOM, titleDOM)\r\n  appendChild(textDOM, linkDOM)\r\n  appendChild(aDOM, textDOM)\r\n  appendChild(aDOM, iconDOM)\r\n  appendChild(wrapDOM, aDOM)\r\n  return wrapDOM\r\n}\r\n\r\nexport default function renderer(el, title, link, icon) {\r\n  const dom = createDOM(title, link, icon)\r\n\r\n  // Reset the attribute\r\n  Array.from(el.attributes).forEach((attr) => {\r\n    dom.querySelector('a').setAttribute(attr.name, attr.value)\r\n  })\r\n  el.parentNode.replaceChild(dom, el)\r\n}\r\n","import './inject'\nimport renderer from './renderer'\nimport parse from './parse'\nimport { verifyParams, indexHandler, isHttp } from './utils'\n\nconst proxyHandler = {\n  set(target, name, value) {\n    verifyParams(value, ['title', 'link'])\n    name = indexHandler(name)\n    target[name] = value\n    return true\n  }\n}\ncardLink.cache = new Proxy({}, proxyHandler)\n\nfunction fetchPage(link, callback) {\n  fetch(link)\n    .then((result) => result.text())\n    .then(callback)\n    .catch((error) => {\n      const server = cardLink.server\n      // eslint-disable-next-line no-console\n      if (link.includes(server) || !server) return console.error('CardLink Error:', error)\n      fetchPage(server + link, callback)\n    })\n}\n\n/**\n * Create card links\n * @param {NodeList} nodes A collection of nodes or a collection of arrays,\n * if it is an array then the array must always contain node element\n */\nexport default function cardLink(nodes) {\n  // If the `nodes` do not contain a `forEach` method, then the default `a[cardlink]` is used\n  nodes = 'forEach' in (nodes || {}) ? nodes : document.querySelectorAll('a[cardlink]')\n  nodes.forEach((el) => {\n    // If it is not a tag element then it is not processed\n    if (el.nodeType !== 1) return\n    el.removeAttribute('cardlink')\n    const href = el.href\n\n    const cache = cardLink.cache[href]\n    if (cache) return renderer(el, cache.title, cache.link, cache.icon)\n\n    if (isHttp(href)) {\n      fetchPage(href, (html) => {\n        const { title, link, icon } = parse(html, href)\n        cardLink.cache[link] = { title, link, icon }\n        renderer(el, title, link, icon)\n      })\n    }\n  })\n}\n","import { isHttp } from './utils'\r\n\r\n/**\r\n * Get info\r\n * @param {String} html String type html\r\n * @param {String} link Website address\r\n */\r\n// eslint-disable-next-line max-statements\r\nexport default function (html, link) {\r\n  try {\r\n    let title, icon\r\n    const doc = new DOMParser().parseFromString(html, 'text/html')\r\n    // If there is no title, no card link is generated\r\n    title = doc.querySelector('title')\r\n    if (title) {\r\n      title = title.textContent\r\n\r\n      // Get the src of the first img tag in the body tag\r\n      icon = doc.querySelector('body img')\r\n      icon = icon && icon.getAttribute('src')\r\n\r\n      if (/^data:image/.test(icon)) icon = ''\r\n\r\n      // If there is no src then get the site icon\r\n      if (!icon) {\r\n        const links = [].slice.call(doc.querySelectorAll('link[rel][href]'))\r\n        icon = links.find((_el) => _el.rel.includes('icon'))\r\n        icon = icon && icon.getAttribute('href')\r\n      }\r\n\r\n      // If `icon` is not the ['https://', 'http://', '//'] protocol, splice on the `origin` of the a tag\r\n      if (icon && !isHttp(icon)) icon = new URL(link).origin + icon\r\n\r\n      return { title, link, icon }\r\n    }\r\n  } catch (error) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn('CardLink Error: Failed to parse', error)\r\n  }\r\n  return {}\r\n}\r\n"],"names":["createElement","name","className","dom","document","createSVG","createElementNS","setAttribute","el","obj","key","appendChild","child","isHttp","url","test","style","createDOM","title","link","icon","wrapDOM","iconDOM","svg","classList","add","background","fill","viewBox","path","d","img","src","onload","parentNode","replaceChild","createIcon","aDOM","href","textDOM","titleDOM","textContent","linkDOM","linkSvgDOM","width","height","linkPathDOM","createTextNode","renderer","Array","from","attributes","forEach","attr","querySelector","value","head","proxyHandler","set","target","param","requiredParams","index","requiredParam","Error","verifyParams","replace","length","fetchPage","callback","fetch","then","result","text","error","server","cardLink","includes","console","nodes","querySelectorAll","nodeType","removeAttribute","cache","html","_parse","doc","DOMParser","parseFromString","getAttribute","slice","call","find","_el","rel","URL","origin","warn","parse","Proxy"],"mappings":"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"}